
CREATE TABLE USER (
    USER_ID        INT          PRIMARY KEY,
    USERNAME       VARCHAR(50)  NOT NULL,
    GENDER         CHAR(1),
    MOBILE_NO      VARCHAR(15),
    AGE            INT,
    DOB            DATE
);


CREATE TABLE STATION (
    STATION_ID      INT          PRIMARY KEY,
    STATION_NAME    VARCHAR(50)  NOT NULL,
    PLACE           VARCHAR(50),
    STATE           VARCHAR(50),
    ZONE            VARCHAR(50),
    NO_OF_PLATFORMS INT
);

CREATE TABLE TRAIN (
    TRAIN_ID         INT          PRIMARY KEY,
    TRAIN_NAME       VARCHAR(100) NOT NULL,
    START_STATION_ID INT          NOT NULL,
    END_STATION_ID   INT          NOT NULL,
    CAPACITY         INT,
    SCHEDULED_TIME   TIMESTAMP,
    FOREIGN KEY (START_STATION_ID) REFERENCES STATION(STATION_ID),
    FOREIGN KEY (END_STATION_ID)   REFERENCES STATION(STATION_ID)
);


CREATE TABLE TRAIN_STOP (
    TRAIN_ID   INT   NOT NULL,
    STATION_ID INT   NOT NULL,
    ARR_TIME   TIME  NOT NULL,
    DEP_TIME   TIME  NOT NULL,
    PLATFORM   INT,
    PRIMARY KEY (TRAIN_ID, STATION_ID),
    FOREIGN KEY (TRAIN_ID)   REFERENCES TRAIN(TRAIN_ID),
    FOREIGN KEY (STATION_ID) REFERENCES STATION(STATION_ID)
);


CREATE TABLE TICKET_STATUS (
    STATUS_ID   INT          PRIMARY KEY,
    STATUS_NAME VARCHAR(50)  NOT NULL  UNIQUE
);


CREATE TABLE TICKET (
    TICKET_ID    INT           PRIMARY KEY,
    PNR          VARCHAR(20)   NOT NULL  UNIQUE,
    USER_ID      INT           NOT NULL,
    TRAIN_ID     INT           NOT NULL,
    STATUS_ID    INT           NOT NULL,
    TRAVEL_DATE  DATE          NOT NULL,
    CLASS        VARCHAR(10)   NOT NULL,
    FARE         DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (USER_ID)   REFERENCES USER(USER_ID),
    FOREIGN KEY (TRAIN_ID)  REFERENCES TRAIN(TRAIN_ID),
    FOREIGN KEY (STATUS_ID) REFERENCES TICKET_STATUS(STATUS_ID),
     FOREIGN KEY (CLASS) REFERENCES PRICING(CLASS)
);


CREATE TABLE PAYMENT (
    PAYMENT_ID     INT           PRIMARY KEY,
    TICKET_ID      INT           NOT NULL,
    USER_ID        INT           NOT NULL,
    AMOUNT         DECIMAL(10,2) NOT NULL,
    METHOD         VARCHAR(50)   NOT NULL,
    PAYMENT_DATE   DATETIME      NOT NULL,
    PAYMENT_STATUS VARCHAR(20)   NOT NULL  CHECK (PAYMENT_STATUS IN ('PAID','PENDING','REFUNDED')),
    FOREIGN KEY (TICKET_ID) REFERENCES TICKET(TICKET_ID),
    FOREIGN KEY (USER_ID)   REFERENCES USER(USER_ID)
);
drop table payment;

CREATE TABLE BOOKED (
    USER_ID  INT NOT NULL,
    TRAIN_ID INT NOT NULL,
    PRIMARY KEY (USER_ID, TRAIN_ID),
    FOREIGN KEY (USER_ID)  REFERENCES USER(USER_ID),
    FOREIGN KEY (TRAIN_ID) REFERENCES TRAIN(TRAIN_ID)
);




CREATE TABLE PRICING (
    CLASS        VARCHAR(10)   PRIMARY KEY,
    BASE_FARE    DECIMAL(10,2) NOT NULL,
    extra_fare DECIMAL(10,2) default 0.0
);



